plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
}

afterEvaluate {
    publishing{
        publications{
            release(MavenPublication){
                from components.release
                groupId = 'net.common.commonlib'
                artifactId = 'commonlib'
                version = '1.0.0'
            }

            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug
                groupId = 'net.common.commonlib'
                artifactId = 'commonlib'
                version = '1.0.0'
            }
        }
    }
}


android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.1'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
}

task deleteObjectJar(type:Delete){
    delete'release/commonlib.jar'
}

// release 폴더에 library 이름으로 jar 생성.
task exportJar(type: Copy){
    from('build/intermediates/aar_main_jar/release/')
    into('release/')
    include('classes.jar')
    rename('classes.jar', 'commonlib.jar')
}

exportJar.dependsOn(deleteObjectJar, build)